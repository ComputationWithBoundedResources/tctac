WORST_CASE(?,O(n^1))
* Step 1: Bounds WORST_CASE(?,O(n^1))
    + Considered Problem:
        - Strict TRS:
            foldl#3(x16,Cons(x24,x6)) -> foldl#3(Cons(x24,x16),x6)
            foldl#3(x2,Nil()) -> x2
            main(x1) -> foldl#3(Nil(),x1)
        - Signature:
            {foldl#3/2,main/1} / {Cons/2,Nil/0}
        - Obligation:
            innermost runtime complexity wrt. defined symbols {foldl#3,main} and constructors {Cons,Nil}
    + Applied Processor:
        Bounds {initialAutomaton = minimal, enrichment = match}
    + Details:
        The problem is match-bounded by 1.
        The enriched problem is compatible with follwoing automaton.
          Cons_0(2,2) -> 1
          Cons_0(2,2) -> 2
          Cons_1(2,2) -> 1
          Cons_1(2,2) -> 3
          Cons_1(2,3) -> 1
          Cons_1(2,3) -> 3
          Nil_0() -> 1
          Nil_0() -> 2
          Nil_1() -> 1
          Nil_1() -> 3
          foldl#3_0(2,2) -> 1
          foldl#3_1(3,2) -> 1
          main_0(2) -> 1
          2 -> 1
          3 -> 1
* Step 2: EmptyProcessor WORST_CASE(?,O(1))
    + Considered Problem:
        - Weak TRS:
            foldl#3(x16,Cons(x24,x6)) -> foldl#3(Cons(x24,x16),x6)
            foldl#3(x2,Nil()) -> x2
            main(x1) -> foldl#3(Nil(),x1)
        - Signature:
            {foldl#3/2,main/1} / {Cons/2,Nil/0}
        - Obligation:
            innermost runtime complexity wrt. defined symbols {foldl#3,main} and constructors {Cons,Nil}
    + Applied Processor:
        EmptyProcessor
    + Details:
        The problem is already closed. The intended complexity is O(1).

WORST_CASE(?,O(n^1))
