WORST_CASE(?,O(1))
* Step 1: DependencyPairs WORST_CASE(?,O(1))
    + Considered Problem:
        - Strict TRS:
            eq(x,x) -> true()
        - Signature:
            {eq/2} / {true/0}
        - Obligation:
            innermost runtime complexity wrt. defined symbols {eq} and constructors {true}
    + Applied Processor:
        DependencyPairs {dpKind_ = DT}
    + Details:
        We add the following dependency tuples:
        
        Strict DPs
          eq#(x,x) -> c_1()
        Weak DPs
          
        
        and mark the set of starting terms.
* Step 2: PredecessorEstimation WORST_CASE(?,O(1))
    + Considered Problem:
        - Strict DPs:
            eq#(x,x) -> c_1()
        - Weak TRS:
            eq(x,x) -> true()
        - Signature:
            {eq/2,eq#/2} / {true/0,c_1/0}
        - Obligation:
            innermost runtime complexity wrt. defined symbols {eq#} and constructors {true}
    + Applied Processor:
        PredecessorEstimation {onSelection = all simple predecessor estimation selector}
    + Details:
        We estimate the number of application of
          {1}
        by application of
          Pre({1}) = {}.
        Here rules are labelled as follows:
          1: eq#(x,x) -> c_1()
* Step 3: RemoveWeakSuffixes WORST_CASE(?,O(1))
    + Considered Problem:
        - Weak DPs:
            eq#(x,x) -> c_1()
        - Weak TRS:
            eq(x,x) -> true()
        - Signature:
            {eq/2,eq#/2} / {true/0,c_1/0}
        - Obligation:
            innermost runtime complexity wrt. defined symbols {eq#} and constructors {true}
    + Applied Processor:
        RemoveWeakSuffixes
    + Details:
        Consider the dependency graph
          1:W:eq#(x,x) -> c_1()
             
          
        The following weak DPs constitute a sub-graph of the DG that is closed under successors. The DPs are removed.
          1: eq#(x,x) -> c_1()
* Step 4: EmptyProcessor WORST_CASE(?,O(1))
    + Considered Problem:
        - Weak TRS:
            eq(x,x) -> true()
        - Signature:
            {eq/2,eq#/2} / {true/0,c_1/0}
        - Obligation:
            innermost runtime complexity wrt. defined symbols {eq#} and constructors {true}
    + Applied Processor:
        EmptyProcessor
    + Details:
        The problem is already closed. The intended complexity is O(1).

WORST_CASE(?,O(1))
