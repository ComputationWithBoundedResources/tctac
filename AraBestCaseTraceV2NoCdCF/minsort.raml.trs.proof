BEST_CASE(Omega(n^2),?)

Solution:
---------

  "#0" :: [] -(0)-> "b"(0, 0)
  "#EQ" :: [] -(0)-> "d"(0, 0)
  "#GT" :: [] -(0)-> "d"(0, 0)
  "#LT" :: [] -(0)-> "d"(0, 0)
  "#cklt" :: ["d"(0, 0)] -(1)-> "a"(1, 0)
  "#compare" :: ["b"(0, 0) x "b"(0, 0)] -(1)-> "d"(0, 0)
  "#false" :: [] -(1)-> "a"(1, 0)
  "#false" :: [] -(0)-> "a"(0, 0)
  "#less" :: ["b"(0, 0) x "b"(0, 0)] -(3)-> "a"(1, 0)
  "#neg" :: ["b"(0, 0)] -(0)-> "b"(0, 0)
  "#pos" :: ["b"(0, 0)] -(0)-> "b"(0, 0)
  "#s" :: ["b"(0, 0)] -(0)-> "b"(0, 0)
  "#true" :: [] -(1)-> "a"(1, 0)
  "#true" :: [] -(0)-> "a"(0, 0)
  "dd" :: ["b"(0, 0) x "c"(4, 1)] -(3)-> "c"(2, 1)
  "dd" :: ["b"(0, 0) x "c"(0, 0)] -(0)-> "c"(0, 0)
  "dd" :: ["b"(0, 0) x "c"(2, 1)] -(1)-> "c"(0, 1)
  "findMin" :: ["c"(4, 1)] -(2)-> "c"(2, 1)
  "findMin#1" :: ["c"(2, 1)] -(1)-> "c"(0, 1)
  "findMin#2" :: ["c"(2, 1) x "b"(0, 0)] -(1)-> "c"(0, 1)
  "findMin#3" :: ["a"(1, 0) x "b"(0, 0) x "b"(0, 0) x "c"(4, 1)] -(0)-> "c"(0, 1)
  "minSort" :: ["c"(4, 1)] -(3)-> "c"(0, 0)
  "minSort#1" :: ["c"(2, 1)] -(1)-> "c"(0, 0)
  "nil" :: [] -(0)-> "c"(2, 1)
  "nil" :: [] -(0)-> "c"(0, 0)


Cost Free Signatures:
---------------------

  "#0" :: [] -(0)-> "b"_cf(0, 0)
  "#EQ" :: [] -(4)-> "d"_cf(4, 12)
  "#EQ" :: [] -(4)-> "d"_cf(4, 0)
  "#EQ" :: [] -(0)-> "d"_cf(0, 0)
  "#GT" :: [] -(4)-> "d"_cf(4, 12)
  "#GT" :: [] -(4)-> "d"_cf(4, 0)
  "#GT" :: [] -(4)-> "d"_cf(4, 3)
  "#GT" :: [] -(0)-> "d"_cf(0, 0)
  "#LT" :: [] -(4)-> "d"_cf(4, 12)
  "#LT" :: [] -(4)-> "d"_cf(4, 0)
  "#LT" :: [] -(4)-> "d"_cf(4, 3)
  "#LT" :: [] -(0)-> "d"_cf(0, 0)
  "#cklt" :: ["d"_cf(4, 12)] -(0)-> "a"_cf(4, 5)
  "#cklt" :: ["d"_cf(0, 0)] -(0)-> "a"_cf(0, 0)
  "#compare" :: ["b"_cf(0, 0) x "b"_cf(0, 0)] -(4)-> "d"_cf(4, 6)
  "#compare" :: ["b"_cf(0, 0) x "b"_cf(0, 0)] -(0)-> "d"_cf(0, 0)
  "#false" :: [] -(4)-> "a"_cf(4, 12)
  "#false" :: [] -(4)-> "a"_cf(4, 0)
  "#false" :: [] -(4)-> "a"_cf(4, 2)
  "#false" :: [] -(0)-> "a"_cf(0, 0)
  "#less" :: ["b"_cf(0, 0) x "b"_cf(0, 0)] -(4)-> "a"_cf(4, 8)
  "#less" :: ["b"_cf(0, 0) x "b"_cf(0, 0)] -(0)-> "a"_cf(0, 0)
  "#neg" :: ["b"_cf(0, 0)] -(0)-> "b"_cf(0, 0)
  "#pos" :: ["b"_cf(0, 0)] -(0)-> "b"_cf(0, 0)
  "#s" :: ["b"_cf(0, 0)] -(0)-> "b"_cf(0, 0)
  "#true" :: [] -(4)-> "a"_cf(4, 12)
  "#true" :: [] -(4)-> "a"_cf(4, 0)
  "#true" :: [] -(0)-> "a"_cf(0, 0)
  "dd" :: ["b"_cf(0, 0) x "c"_cf(2, 0)] -(2)-> "c"_cf(2, 0)
  "dd" :: ["b"_cf(0, 0) x "c"_cf(0, 0)] -(0)-> "c"_cf(0, 0)
  "findMin" :: ["c"_cf(2, 0)] -(0)-> "c"_cf(2, 0)
  "findMin" :: ["c"_cf(0, 0)] -(0)-> "c"_cf(0, 0)
  "findMin#1" :: ["c"_cf(2, 0)] -(0)-> "c"_cf(2, 0)
  "findMin#1" :: ["c"_cf(0, 0)] -(0)-> "c"_cf(0, 0)
  "findMin#2" :: ["c"_cf(2, 0) x "b"_cf(0, 0)] -(2)-> "c"_cf(2, 0)
  "findMin#2" :: ["c"_cf(0, 0) x "b"_cf(0, 0)] -(0)-> "c"_cf(0, 0)
  "findMin#3" :: ["a"_cf(4, 12) x "b"_cf(0, 0) x "b"_cf(0, 0) x "c"_cf(2, 0)] -(0)-> "c"_cf(2, 0)
  "findMin#3" :: ["a"_cf(0, 0) x "b"_cf(0, 0) x "b"_cf(0, 0) x "c"_cf(0, 0)] -(0)-> "c"_cf(0, 0)
  "minSort" :: ["c"_cf(0, 0)] -(0)-> "c"_cf(0, 0)
  "minSort#1" :: ["c"_cf(0, 0)] -(0)-> "c"_cf(0, 0)
  "nil" :: [] -(0)-> "c"_cf(2, 0)
  "nil" :: [] -(0)-> "c"_cf(1, 0)
  "nil" :: [] -(0)-> "c"_cf(0, 0)


Base Constructors:
------------------
  "\"#0\"_b" :: [] -(0)-> "b"(0)
  "\"#EQ\"_d" :: [] -(0)-> "d"(0)
  "\"#GT\"_d" :: [] -(0)-> "d"(0)
  "\"#LT\"_d" :: [] -(0)-> "d"(0)
  "\"#false\"_a" :: [] -(0)-> "a"(0)
  "\"#neg\"_b" :: ["b"(0)] -(0)-> "b"(0)
  "\"#pos\"_b" :: ["b"(0)] -(0)-> "b"(0)
  "\"#s\"_b" :: ["b"(0)] -(0)-> "b"(0)
  "\"#true\"_a" :: [] -(0)-> "a"(0)
  "\"dd\"_c" :: ["b"(0, 0) x "c"(1, 0)] -(1)-> "c"(1, 0)
  "\"dd\"_c" :: ["b"(0, 0) x "c"(2, 1)] -(1)-> "c"(0, 1)
  "\"nil\"_c" :: [] -(0)-> "c"(1, 0)
  "\"nil\"_c" :: [] -(0)-> "c"(0, 1)

